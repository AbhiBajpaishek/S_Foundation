<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>